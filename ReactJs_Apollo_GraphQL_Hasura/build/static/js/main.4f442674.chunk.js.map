{"version":3,"sources":["components/Auth/loading.svg","components/Auth/Callback.js","components/Auth/Login.js","components/Auth/LogoutBtn.js","components/Header.js","components/Todo/TodoItem.js","components/Todo/TodoFilters.js","components/Todo/TodoPrivateList.js","components/Todo/TodoInput.js","components/Todo/TodoPrivateWrapper.js","components/Todo/TaskItem.js","components/Todo/TodoPublicList.js","components/Todo/TodoPublicWrapper.js","components/Todo/LimitedWordTextArea.js","components/OnlineUsers/OnlineUser.js","components/OnlineUsers/OnlineUsersWrapper.js","components/App.js","components/Auth/react-auth0-spa.js","utils/history.js","components/Auth/auth0-variables.js","index.js"],"names":["module","exports","__webpack_require__","p","Callback","react_default","a","createElement","style","position","display","justifyContent","height","width","top","bottom","left","right","backgroundColor","src","loading","alt","Login","_useAuth","useAuth0","loginWithRedirect","className","Button","id","variant","onClick","LogoutBtn","_ref","logoutHandler","Header","Navbar","Brand","Collapse","Auth_LogoutBtn","TodoItem","index","todo","REMOVE_TODO","gql","_templateObject","_useMutation","useMutation","removeTodoMutation","Object","slicedToArray","TOGGLE_TODO","_templateObject2","_useMutation3","toggleTodoMutation","checked","is_completed","type","onChange","variables","isCompleted","optimisticResponse","update","cache","newTodos","readQuery","query","GET_MY_TODOS","todos","map","t","objectSpread","writeQuery","data","htmlFor","title","e","preventDefault","stopPropagation","filter","TodoFilters","currentFilter","filterResultsFn","clearCompletedFn","filterResultsHandler","clearCompletedButton","activeTodos","itemCount","length","TodoPrivateList_templateObject","CLEAR_COMPLETED","TodoPrivateList_templateObject2","TodoPrivateList","props","_useState","useState","clearInProgress","_useState2","state","setState","clearCompletedTodos","filteredTodos","todoList","forEach","push","Todo_TodoItem","key","react","Todo_TodoFilters","TodoPrivateListQuery","_useQuery","useQuery","error","console","TodoPrivateList_TodoPrivateList","ADD_TODO","TodoInput_templateObject","TodoInput","_ref$isPublic","isPublic","todoInput","setTodoInput","_ref2","existingTodos","newTodo","insert_todos","returning","concat","toConsumableArray","onCompleted","addTodo","onSubmit","placeholder","value","target","ref","n","required","TodoPrivateWrapper","Todo_TodoInput","Todo_TodoPrivateList","TaskItem","user","name","TodoPublicList","olderTodosAvailable","newTodosCount","is_public","Todo_TaskItem","newTodosNotification","toString","olderTodosMsg","TodoPublicWrapper","Todo_TodoPublicList","LimitedWordTextarea","rows","cols","limit","content","setContent","_useState3","_useState4","wordCount","setWordCount","setFormattedContent","text","words","split","Boolean","slice","join","React","useEffect","event","OnlineUser","OnlineUsersWrapper","onlineUsers","onlineUsersList","OnlineUsers_OnlineUser","Fragment","LimitedWordTextArea","App","idToken","logout","authToken","client","ApolloClient","link","HttpLink","uri","headers","Authorization","InMemoryCache","react_common_esm","components_Header","Todo_TodoPrivateWrapper","Todo_TodoPublicWrapper","OnlineUsers_OnlineUsersWrapper","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","location","pathname","Auth0Context","createContext","useContext","Auth0Provider","children","_ref$onRedirectCallba","onRedirectCallback","initOptions","objectWithoutProperties","isAuthenticated","setIsAuthenticated","setUser","_useState5","_useState6","auth0Client","setAuth0","_useState7","_useState8","setLoading","_useState9","_useState10","popupOpen","setPopupOpen","_useState11","_useState12","setIdToken","asyncToGenerator","regenerator_default","mark","_callee","auth0FromHook","_ref3","appState","_user","idTokenClaims","wrap","_context","prev","next","createAuth0Client","sent","search","includes","handleRedirectCallback","getUser","getIdTokenClaims","__raw","stop","apply","this","arguments","initAuth0","loginWithPopup","_ref4","_callee2","params","_args2","_context2","undefined","t0","finish","_ref5","_callee3","result","_context3","abrupt","Auth_Callback","Provider","getTokenSilently","getTokenWithPopup","components_App","Auth_Login","createBrowserHistory","AUTH_CONFIG","targetUrl","mainRoutes","react_router","path","render","react_auth0_spa_Auth0Provider","domain","client_id","redirect_uri","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.4f442674.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.c5590569.svg\";","import React from 'react';\nimport loading from './loading.svg';\n\nconst Callback = () => {\n    const style = {\n        position: 'absolute',\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        width: '100vw',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        backgroundColor: 'white',\n    };\n\n    return (\n        <div style={style}>\n            <img src={loading} alt=\"loading\" />\n        </div>\n    );\n};\n\nexport default Callback;\n","import React from 'react';\nimport { useAuth0 } from './react-auth0-spa';\n\nimport { Button } from 'react-bootstrap';\n\nconst Login = () => {\n    const { loading, loginWithRedirect } = useAuth0();\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n    return (\n        <div className=\"overlay\">\n            <div className=\"overlay-content\">\n                <div className=\"overlay-heading\">\n                    Welcome to the GraphQL tutorial app\n                </div>\n                <div className=\"overlay-message\">Please login to continue</div>\n                <div className=\"overlay-action\">\n                    <Button\n                        id=\"qsLoginBtn\"\n                        variant=\"primary\"\n                        className=\"btn-margin loginBtn\"\n                        onClick={() => {\n                            loginWithRedirect({});\n                        }}\n                    >\n                        Log In\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nconst LogoutBtn = ({ logoutHandler }) => (\n    <Button\n        id=\"qsLogoutBtn\"\n        variant=\"primary\"\n        className=\"btn-margin logoutBtn\"\n        onClick={logoutHandler}\n    >\n        Log Out\n    </Button>\n);\n\nexport default LogoutBtn;\n","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport LogoutBtn from './Auth/LogoutBtn';\n\nconst Header = ({ logoutHandler }) => (\n    <Navbar className=\"justify-content-between\">\n        <Navbar.Brand>GraphQL Tutorial App</Navbar.Brand>\n        <Navbar.Collapse className=\"justify-content-end\">\n            <LogoutBtn logoutHandler={logoutHandler} />\n        </Navbar.Collapse>\n    </Navbar>\n);\n\nexport default Header;\n","import React from 'react';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { GET_MY_TODOS } from './TodoPrivateList';\nconst TodoItem = ({ index, todo }) => {\n    const removeTodo = e => {\n        e.preventDefault();\n        e.stopPropagation();\n        removeTodoMutation({\n            variables: { id: todo.id },\n            optimisticResponse: null,\n            update: cache => {\n                const existingTodos = cache.readQuery({ query: GET_MY_TODOS });\n                const newTodos = existingTodos.todos.filter(\n                    t => t.id !== todo.id\n                );\n                cache.writeQuery({\n                    query: GET_MY_TODOS,\n                    data: { todos: newTodos },\n                });\n            },\n        });\n    };\n\n    const REMOVE_TODO = gql`\n        mutation removeTodo($id: Int!) {\n            delete_todos(where: { id: { _eq: $id } }) {\n                affected_rows\n            }\n        }\n    `;\n    const [removeTodoMutation] = useMutation(REMOVE_TODO);\n\n    const TOGGLE_TODO = gql`\n        mutation toggleTodo($id: Int!, $isCompleted: Boolean!) {\n            update_todos(\n                where: { id: { _eq: $id } }\n                _set: { is_completed: $isCompleted }\n            ) {\n                affected_rows\n            }\n        }\n    `;\n    const [toggleTodoMutation] = useMutation(TOGGLE_TODO); // that comes to TOGGLE_TODO where update_todos takes parameters\n\n    //use of toggleTodoMutation mutate function.\n    const toggleTodo = () => {\n        toggleTodoMutation({\n            variables: { id: todo.id, isCompleted: !todo.is_completed },\n            optimisticResponse: null,\n            update: cache => {\n                const existingTodos = cache.readQuery({ query: GET_MY_TODOS });\n                const newTodos = existingTodos.todos.map(t => {\n                    if (t.id === todo.id) {\n                        return { ...t, is_completed: !t.is_completed };\n                    } else {\n                        return t;\n                    }\n                });\n                cache.writeQuery({\n                    query: GET_MY_TODOS,\n                    data: { todos: newTodos },\n                });\n            },\n        });\n    };\n\n    return (\n        <li>\n            <div className=\"view\">\n                <div className=\"round\">\n                    <input\n                        checked={todo.is_completed}\n                        type=\"checkbox\"\n                        id={todo.id}\n                        onChange={toggleTodo}\n                    />\n                    <label htmlFor={todo.id} />\n                </div>\n            </div>\n\n            <div\n                className={\n                    'labelContent' + (todo.is_completed ? ' completed' : '')\n                }\n            >\n                <div>{todo.title}</div>\n            </div>\n\n            <button className=\"closeBtn\" onClick={removeTodo}>\n                x\n            </button>\n        </li>\n    );\n};\n\nexport default TodoItem;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nconst TodoFilters = ({\n    todos,\n    currentFilter,\n    filterResultsFn,\n    clearCompletedFn,\n}) => {\n    const filterResultsHandler = filter => {\n        return () => {\n            filterResultsFn(filter);\n        };\n    };\n\n    // The clear completed button if these are personal todos\n    const clearCompletedButton = (\n        <button onClick={clearCompletedFn} className=\"clearComp\">\n            Clear completed\n        </button>\n    );\n\n    const activeTodos = todos.filter(todo => todo.is_completed !== true);\n\n    let itemCount = todos.length;\n    if (currentFilter === 'active') {\n        itemCount = activeTodos.length;\n    } else if (currentFilter === 'completed') {\n        itemCount = todos.length - activeTodos.length;\n    }\n\n    return (\n        <div className=\"footerList\">\n            <span>\n                {' '}\n                {itemCount} item\n                {itemCount !== 1 ? 's' : ''}\n            </span>\n\n            <ul>\n                <li onClick={filterResultsHandler('all')}>\n                    <a className={currentFilter === 'all' ? 'selected' : ''}>\n                        All\n                    </a>\n                </li>\n\n                <li onClick={filterResultsHandler('active')}>\n                    <a className={currentFilter === 'active' ? 'selected' : ''}>\n                        Active\n                    </a>\n                </li>\n\n                <li onClick={filterResultsHandler('completed')}>\n                    <a\n                        className={\n                            currentFilter === 'completed' ? 'selected' : ''\n                        }\n                    >\n                        Completed\n                    </a>\n                </li>\n            </ul>\n\n            {clearCompletedButton}\n        </div>\n    );\n};\n\nexport default TodoFilters;\n","import React, { useState, Fragment } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\n\nimport TodoItem from './TodoItem';\nimport TodoFilters from './TodoFilters';\nimport gql from 'graphql-tag';\n\nconst GET_MY_TODOS = gql`\n    query getMyTodos {\n        todos(\n            where: { is_public: { _eq: false } }\n            order_by: { created_at: desc }\n        ) {\n            id\n            title\n            created_at\n            is_completed\n        }\n    }\n`;\n// Remove all the todos that are completed\nconst CLEAR_COMPLETED = gql`\n    mutation clearCompleted {\n        delete_todos(\n            where: { is_completed: { _eq: true }, is_public: { _eq: false } }\n        ) {\n            affected_rows\n        }\n    }\n`;\n\nconst TodoPrivateList = props => {\n    const [state, setState] = useState({\n        filter: 'all',\n        clearInProgress: false,\n    });\n\n    const filterResults = filter => {\n        setState({\n            ...state,\n            filter: filter,\n        });\n    };\n\n    const [clearCompletedTodos] = useMutation(CLEAR_COMPLETED);\n    const clearCompleted = () => {\n        clearCompletedTodos({\n            optimisticResponse: null,\n            update: (cache, { data }) => {\n                const existingTodos = cache.readQuery({ query: GET_MY_TODOS });\n                const newTodos = existingTodos.todos.filter(\n                    t => !t.is_completed\n                );\n                cache.writeQuery({\n                    query: GET_MY_TODOS,\n                    data: { todos: newTodos },\n                });\n            },\n        });\n    };\n\n    // changing way of taking data to props\n    const { todos } = props;\n    let filteredTodos = todos;\n\n    if (state.filter === 'active') {\n        filteredTodos = todos.filter(todo => todo.is_completed !== true);\n    } else if (state.filter === 'completed') {\n        filteredTodos = todos.filter(todo => todo.is_completed === true);\n    }\n\n    const todoList = [];\n\n    filteredTodos.forEach((todo, index) => {\n        todoList.push(<TodoItem key={index} index={index} todo={todo} />);\n    });\n\n    return (\n        <Fragment>\n            <div className=\"todoListWrapper\">\n                <ul>{todoList}</ul>\n            </div>\n\n            <TodoFilters\n                todos={filteredTodos}\n                currentFilter={state.filter}\n                filterResultsFn={filterResults}\n                clearCompletedFn={clearCompleted}\n                clearInProgress={state.clearInProgress}\n            />\n        </Fragment>\n    );\n};\n\nconst TodoPrivateListQuery = () => {\n    const { loading, error, data } = useQuery(GET_MY_TODOS);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n    if (error) {\n        console.error(error);\n        return <div>Error!</div>;\n    }\n    return <TodoPrivateList todos={data.todos} />;\n};\n\nexport default TodoPrivateListQuery;\nexport { GET_MY_TODOS };\n","import React, { useState } from 'react';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { GET_MY_TODOS } from './TodoPrivateList';\n\n// Gouls for this component\n// Make a mutation to insert the new todo in the database.\n// Once the mutation is done, we need to update the cache to update the UI.\n\nconst ADD_TODO = gql`\n    mutation($todo: String!, $isPublic: Boolean!) {\n        insert_todos(objects: { title: $todo, is_public: $isPublic }) {\n            affected_rows\n            returning {\n                id\n                title\n                created_at\n                is_completed\n            }\n        }\n    }\n`;\nconst TodoInput = ({ isPublic = false }) => {\n    let input;\n    const [todoInput, setTodoInput] = useState('');\n    const updateCache = (cache, { data }) => {\n        // If this is for the public feed, do nothing\n        if (isPublic) {\n            return null;\n        }\n        // Fetch the todos from the cache\n        const existingTodos = cache.readQuery({\n            query: GET_MY_TODOS,\n        });\n        // Add the new todo to the cache\n        const newTodo = data.insert_todos.returning[0];\n        cache.writeQuery({\n            query: GET_MY_TODOS,\n            data: { todos: [newTodo, ...existingTodos.todos] },\n        });\n    };\n    const resetInput = () => {\n        setTodoInput('');\n    };\n    const [addTodo] = useMutation(ADD_TODO, {\n        update: updateCache,\n        onCompleted: resetInput,\n    });\n    return (\n        <form\n            className=\"formInput\"\n            onSubmit={e => {\n                e.preventDefault();\n                addTodo({ variables: { todo: todoInput, isPublic } });\n            }}\n        >\n            <input\n                className=\"input\"\n                placeholder=\"What needs to be done?\"\n                value={todoInput}\n                onChange={e => setTodoInput(e.target.value)}\n                ref={n => (input = n)}\n                required\n            />\n            <i className=\"inputMarker fa fa-angle-right\" />\n        </form>\n    );\n};\n\nexport default TodoInput;\n","import React from 'react';\n\nimport TodoInput from './TodoInput';\nimport TodoPrivateList from './TodoPrivateList';\n\nconst TodoPrivateWrapper = () => {\n    return (\n        <div className=\"todoWrapper\">\n            <div className=\"sectionHeader\">Personal todos</div>\n\n            <TodoInput />\n            <TodoPrivateList />\n        </div>\n    );\n};\n\nexport default TodoPrivateWrapper;\n","import React from 'react';\n\nconst TaskItem = ({ index, todo }) => {\n    return (\n        <li>\n            <div className=\"userInfoPublic\" title={todo.user.name}>\n                @{todo.user.name}\n            </div>\n\n            <div\n                className={\n                    'labelContent' + (todo.is_completed ? ' completed' : '')\n                }\n            >\n                <div>{todo.title}</div>\n            </div>\n        </li>\n    );\n};\n\nexport default TaskItem;\n","import React, { Fragment } from 'react';\n\nimport TaskItem from './TaskItem';\n\nconst TodoPublicList = props => {\n    const state = {\n        olderTodosAvailable: true,\n        newTodosCount: 1,\n        todos: [\n            {\n                id: '1',\n                title: 'This is public todo 1',\n                user: {\n                    name: 'someUser1',\n                },\n            },\n            {\n                id: '2',\n                title: 'This is public todo 2',\n                is_completed: false,\n                is_public: true,\n                user: {\n                    name: 'someUser2',\n                },\n            },\n            {\n                id: '3',\n                title: 'This is public todo 3',\n                user: {\n                    name: 'someUser3',\n                },\n            },\n            {\n                id: '4',\n                title: 'This is public todo 4',\n                user: {\n                    name: 'someUser4',\n                },\n            },\n        ],\n    };\n\n    const loadNew = () => {};\n\n    const loadOlder = () => {};\n\n    let todos = state.todos;\n\n    const todoList = (\n        <ul>\n            {todos.map((todo, index) => {\n                return <TaskItem key={index} index={index} todo={todo} />;\n            })}\n        </ul>\n    );\n\n    let newTodosNotification = '';\n    if (state.newTodosCount) {\n        newTodosNotification = (\n            <div className={'loadMoreSection'} onClick={loadNew}>\n                New tasks have arrived! ({state.newTodosCount.toString()})\n            </div>\n        );\n    }\n\n    const olderTodosMsg = (\n        <div className={'loadMoreSection'} onClick={loadOlder}>\n            {state.olderTodosAvailable\n                ? 'Load older tasks'\n                : 'No more public tasks!'}\n        </div>\n    );\n\n    return (\n        <Fragment>\n            <div className=\"todoListWrapper\">\n                {newTodosNotification}\n\n                {todoList}\n\n                {olderTodosMsg}\n            </div>\n        </Fragment>\n    );\n};\n\nexport default TodoPublicList;\n","import React from 'react';\n\nimport TodoInput from './TodoInput';\nimport TodoPublicList from './TodoPublicList';\n\nconst TodoPublicWrapper = () => {\n    return (\n        <div className=\"todoWrapper\">\n            <div className=\"sectionHeader\">Public feed (realtime)</div>\n\n            <TodoInput isPublic />\n            <TodoPublicList />\n        </div>\n    );\n};\n\nexport default TodoPublicWrapper;\n","import React, { useState } from 'react';\n\nfunction LimitedWordTextarea({ rows, cols, value, limit }) {\n    const [content, setContent] = useState(value);\n    const [wordCount, setWordCount] = useState(0);\n\n    const setFormattedContent = text => {\n        let words = text.split(' ');\n        if (words.filter(Boolean).length > limit) {\n            setContent(\n                text\n                    .split(' ')\n                    .slice(0, limit)\n                    .join(' ')\n            );\n            setWordCount(limit);\n        } else {\n            setContent(text);\n            setWordCount(words.filter(Boolean).length);\n        }\n    };\n\n    React.useEffect(() => {\n        setFormattedContent(content);\n    }, []);\n\n    return (\n        <div>\n            <textarea\n                rows={rows}\n                cols={cols}\n                onChange={event => setFormattedContent(event.target.value)}\n                value={content}\n                placeholder=\"This is test component\"\n            />\n            <p>\n                {wordCount}/{limit}\n            </p>\n        </div>\n    );\n}\n\nexport default LimitedWordTextarea;\n","import React from 'react';\n\nconst OnlineUser = ({ user }) => {\n    return (\n        <div className=\"userInfo\">\n            <div className=\"userImg\">\n                <i className=\"far fa-user\" />\n            </div>\n            <div className=\"userName\">{user.name}</div>\n        </div>\n    );\n};\n\nexport default OnlineUser;\n","import React from 'react';\nimport LimitedWordTextArea from '../Todo/LimitedWordTextArea';\nimport OnlineUser from './OnlineUser';\n\nconst OnlineUsersWrapper = () => {\n    const onlineUsers = [{ name: 'someUser1' }, { name: 'someUser2' }];\n\n    const onlineUsersList = [];\n    onlineUsers.forEach((user, index) => {\n        onlineUsersList.push(\n            <OnlineUser key={index} index={index} user={user} />\n        );\n    });\n\n    return (\n        <>\n            <div className=\"onlineUsersWrapper\">\n                <div className=\"sliderHeader\">\n                    Online users - {onlineUsers.length}\n                </div>\n                {onlineUsersList}\n            </div>\n            <LimitedWordTextArea limit={5} value=\"Hello there!\" />,\n        </>\n    );\n};\n\nexport default OnlineUsersWrapper;\n","import React from 'react';\n\nimport Header from './Header';\nimport TodoPrivateWrapper from './Todo/TodoPrivateWrapper';\nimport TodoPublicWrapper from './Todo/TodoPublicWrapper';\nimport OnlineUsersWrapper from './OnlineUsers/OnlineUsersWrapper';\n\nimport { useAuth0 } from './Auth/react-auth0-spa';\nimport ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport { ApolloProvider } from '@apollo/react-hooks';\n\nconst createApolloClient = authToken => {\n    return new ApolloClient({\n        link: new HttpLink({\n            uri: 'https://hasura.io/learn/graphql',\n            headers: {\n                Authorization: `Bearer ${authToken}`,\n            },\n        }),\n        cache: new InMemoryCache(),\n    });\n};\nconst App = ({ idToken }) => {\n    const { loading, logout } = useAuth0();\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n    const client = createApolloClient(idToken);\n    return (\n        <ApolloProvider client={client}>\n            <div>\n                <Header logoutHandler={logout} />\n                <div className=\"row container-fluid p-left-right-0 m-left-right-0\">\n                    <div className=\"row col-md-9 p-left-right-0 m-left-right-0\">\n                        <div className=\"col-md-6 sliderMenu p-30\">\n                            <TodoPrivateWrapper />\n                        </div>\n                        <div className=\"col-md-6 sliderMenu p-30 bg-gray border-right\">\n                            <TodoPublicWrapper />\n                        </div>\n                    </div>\n                    <div className=\"col-md-3 p-left-right-0\">\n                        <div className=\"col-md-12 sliderMenu p-30 bg-gray\">\n                            <OnlineUsersWrapper />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ApolloProvider>\n    );\n};\n\nexport default App;\n","import React, { useState, useEffect, useContext } from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js';\nimport Callback from './Callback';\nimport Login from './Login';\nimport App from '../App';\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n    window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n    children,\n    onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n    ...initOptions\n}) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [user, setUser] = useState();\n    const [auth0Client, setAuth0] = useState();\n    const [loading, setLoading] = useState(true);\n    const [popupOpen, setPopupOpen] = useState(false);\n    const [idToken, setIdToken] = useState('');\n\n    useEffect(() => {\n        const initAuth0 = async () => {\n            const auth0FromHook = await createAuth0Client(initOptions);\n            setAuth0(auth0FromHook);\n\n            if (window.location.search.includes('code=')) {\n                const {\n                    appState,\n                } = await auth0FromHook.handleRedirectCallback();\n                onRedirectCallback(appState);\n            }\n\n            const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n            setIsAuthenticated(isAuthenticated);\n\n            if (isAuthenticated) {\n                const user = await auth0FromHook.getUser();\n                setUser(user);\n                const idTokenClaims = await auth0FromHook.getIdTokenClaims();\n                setIdToken(idTokenClaims.__raw);\n            }\n\n            setLoading(false);\n        };\n        initAuth0();\n        // eslint-disable-next-line\n    }, []);\n\n    const loginWithPopup = async (params = {}) => {\n        setPopupOpen(true);\n        try {\n            await auth0Client.loginWithPopup(params);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setPopupOpen(false);\n        }\n        const user = await auth0Client.getUser();\n        setUser(user);\n        setIsAuthenticated(true);\n    };\n\n    const handleRedirectCallback = async () => {\n        setLoading(true);\n        const result = await auth0Client.handleRedirectCallback();\n        const user = await auth0Client.getUser();\n        const idTokenClaims = await auth0Client.getIdTokenClaims();\n        setIdToken(idTokenClaims.__raw);\n\n        setLoading(false);\n        setIsAuthenticated(true);\n        setUser(user);\n        return result;\n    };\n\n    if (loading) {\n        return <Callback />;\n    }\n    if (!isAuthenticated) {\n        return (\n            <Auth0Context.Provider\n                value={{\n                    isAuthenticated,\n                    user,\n                    loading,\n                    popupOpen,\n                    loginWithPopup,\n                    handleRedirectCallback,\n                    getIdTokenClaims: (...p) =>\n                        auth0Client.getIdTokenClaims(...p),\n                    loginWithRedirect: (...p) =>\n                        auth0Client.loginWithRedirect(...p),\n                    getTokenSilently: (...p) =>\n                        auth0Client.getTokenSilently(...p),\n                    getTokenWithPopup: (...p) =>\n                        auth0Client.getTokenWithPopup(...p),\n                    logout: (...p) => auth0Client.logout(...p),\n                }}\n            >\n                <Login />\n            </Auth0Context.Provider>\n        );\n    }\n\n    return (\n        <Auth0Context.Provider\n            value={{\n                isAuthenticated,\n                user,\n                loading,\n                popupOpen,\n                loginWithPopup,\n                handleRedirectCallback,\n                getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n                loginWithRedirect: (...p) =>\n                    auth0Client.loginWithRedirect(...p),\n                getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n                getTokenWithPopup: (...p) =>\n                    auth0Client.getTokenWithPopup(...p),\n                logout: (...p) => auth0Client.logout(...p),\n            }}\n        >\n            {children}\n            <App idToken={idToken} />\n        </Auth0Context.Provider>\n    );\n};\n","import { createBrowserHistory } from 'history';\nexport default createBrowserHistory();\n","export const AUTH_CONFIG = {\n    domain: 'graphql-tutorials.auth0.com',\n    clientId: 'P38qnFo1lFAQJrzkun--wEzqljVNGcWW',\n    callbackUrl: 'http://localhost:3000/callback',\n};\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport { Route, Router } from 'react-router-dom';\n\nimport './styles/App.css';\n\nimport { Auth0Provider } from './components/Auth/react-auth0-spa';\nimport history from './utils/history';\nimport { AUTH_CONFIG } from './components/Auth/auth0-variables';\n\nconst onRedirectCallback = appState => {\n    history.push(\n        appState && appState.targetUrl\n            ? appState.targetUrl\n            : window.location.pathname\n    );\n};\n\nconst mainRoutes = (\n    <Router history={history}>\n        <Route\n            path=\"/\"\n            render={() => (\n                <Auth0Provider\n                    domain={AUTH_CONFIG.domain}\n                    client_id={AUTH_CONFIG.clientId}\n                    redirect_uri={AUTH_CONFIG.callbackUrl}\n                    onRedirectCallback={onRedirectCallback}\n                />\n            )}\n        />\n    </Router>\n);\n\nReactDOM.render(mainRoutes, document.getElementById('root'));\n"],"sourceRoot":""}